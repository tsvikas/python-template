# {{project_name}}

<!-- prettier-ignore-start -->
[![Tests][tests-badge]][tests-link]
[![Documentation Status][rtd-badge]][rtd-link]

[![PyPI version][pypi-version]][pypi-link]
[![Conda-Forge][conda-badge]][conda-link]
[![PyPI platforms][pypi-platforms]][pypi-link]

[![GitHub Discussion][github-discussions-badge]][github-discussions-link]


[tests-badge]:              https://github.com/{{username}}/{{project_name}}/actions/workflows/lint_and_test.yml/badge.svg
[tests-link]:               https://github.com/{{username}}/{{project_name}}/actions/workflows/lint_and_test.yml
[conda-badge]:              https://img.shields.io/conda/vn/conda-forge/{{project_name}}
[conda-link]:               https://github.com/conda-forge/{{project_name}}-feedstock
[github-discussions-badge]: https://img.shields.io/static/v1?label=Discussions&message=Ask&color=blue&logo=github
[github-discussions-link]:  https://github.com/{{username}}/{{project_name}}/discussions
[pypi-link]:                https://pypi.org/project/{{project_name}}/
[pypi-platforms]:           https://img.shields.io/pypi/pyversions/{{project_name}}
[pypi-version]:             https://img.shields.io/pypi/v/{{project_name}}
[rtd-badge]:                https://readthedocs.org/projects/{{project_name}}/badge/?version=latest
[rtd-link]:                 https://{{project_name}}.readthedocs.io/en/latest/?badge=latest

<!-- prettier-ignore-end -->

## Usage

```
import {{package_name}}
```

## Development

- install [git][install-git], [uv][install-uv].
- git clone this repo
- run `uv run just prepare`

[install-git]: https://git-scm.com/book/en/v2/Getting-Started-Installing-Git
[install-uv]: https://docs.astral.sh/uv/getting-started/installation/

## Code formatting

{% if format_tool == "ruff" -%}
- use `uv run ruff format .` to format code and docs
{% elif format_tool == "black" -%}
- use `uv run black .` to format code
{% endif -%}
- use
  `git ls-files -z -- '*.md' '*.rst' '*.tex' '*.py' | xargs -0 uv run blacken-docs`
  to format docs

## Code quality

- use `uv run ruff check .` to verify code quality
- use `uv run mypy` to verify check typing
- use `uv run pytest` to run tests

## Build

- run formatting, linting, and tests.
- optionally, use `uv run dunamai from git` to see the current version
{%- if not get_package_version_from_vcs %}
- replace the version in `src/{{package_name}}/__init__.py`
- commit
{%- endif %}
- use
  `VER="vX.Y.Z" && git tag -a "$VER" -m "version $VER" -e && git push origin tag "$VER"`
- use `uv build` to build
{%- if not get_package_version_from_vcs %}
- add '+dev' to the version in `src/{{package_name}}/__init__.py`
- commit
- push
{%- endif %}
