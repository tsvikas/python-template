# if not using poethepoet: remove dev dependencies in pyprojext. update black version in github action
# if using poethepoet: remove black github action
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      # filesystem
      - id: check-illegal-windows-names
      - id: check-case-conflict
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      # git
      - id: check-added-large-files
      - id: check-merge-conflict
      # secrets
      - id: detect-private-key
      # text in files
      - id: end-of-file-fixer
      - id: mixed-line-ending
        args: [--fix=lf]
      - id: trailing-whitespace
      # python
      - id: check-ast
      - id: check-docstring-first
      - id: debug-statements
      - id: requirements-txt-fixer
      - id: name-tests-test
        args: ["--pytest-test-first"]
      # filetypes
      - id: check-json
        exclude: ipynb
      - id: check-symlinks
      - id: check-toml
      - id: check-yaml
      - id: check-xml
      - id: pretty-format-json
  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0
    hooks:
      # python
      - id: python-check-blanket-noqa
      - id: python-check-blanket-type-ignore
      - id: python-check-mock-methods
      - id: python-no-eval
      - id: python-no-log-warn
      - id: python-use-type-annotations
      # rst
      - id: rst-backticks
      - id: rst-directive-colons
      - id: rst-inline-touching-normal
      # text
      - id: text-unicode-replacement-char
  {%- if not allow_jupyter %}
  - repo: local
    hooks:
      - id: forbid-ipynb
        name: forbid ipynb
        entry: filenames must not end in .ipynb
        language: fail
        files: '\.ipynb$'
  {%- endif %}
  # environment manager
  - repo: https://github.com/astral-sh/uv-pre-commit
    rev: 0.5.14
    hooks:
      - id: uv-lock
  - repo: https://github.com/mxr/sync-pre-commit-deps
    rev: v0.0.2
    hooks:
      - id: sync-pre-commit-deps
{%- if ci == "none" %}
  # formatting and linting
  - repo: https://github.com/Lucas-C/pre-commit-hooks
    rev: v1.5.5
    hooks:
      - id: forbid-tabs
  {%- if not use_ruff_format %}
  - repo: https://github.com/psf/black-pre-commit-mirror
    rev: 24.10.0
    hooks:
      - id: black{%if allow_jupyter %}-jupyter{% endif %}
  {%- endif %}
  - repo: https://github.com/adamchainz/blacken-docs
    rev: 1.19.1
    hooks:
      - id: blacken-docs
        additional_dependencies:
        - black==24.10.0
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.8.6
    hooks:
      - id: ruff
        alias: ruff-isort
        args: ["--select", "I001", "--fix"]
      {%- if use_ruff_format %}
      - id: ruff-format
      {%- endif %}
      - id: ruff
{%- elif ci == "poe" %}
  - repo: local
    hooks:
    # black/ruff-isort using poe
    - id: poe-format
      name: poe-the-poet format
      entry: poe format
      stages: [pre-commit, pre-merge-commit, pre-push, manual]
      language: system
      require_serial: true
      types_or: [python, pyi, jupyter]
    - id: poe-format-lock
      name: poe-the-poet format after lock
      entry: poe format
      stages: [pre-commit, pre-merge-commit, pre-push, manual]
      language: system
      require_serial: true
      files: ^uv.lock$
      pass_filenames: false
    # ruff/mypy using poe
    - id: poe-lint
      name: poe-the-poet lint
      entry: poe lint
      language: system
      require_serial: true
      types_or: [python, pyi, jupyter]
    - id: poe-lint-lock
      name: poe-the-poet lint after lock
      entry: poe lint
      language: system
      require_serial: true
      files: ^uv.lock$
      pass_filenames: false
    # pytest using poe
    - id: poe-test
      name: poe-the-poet test
      entry: poe test
      stages: [pre-commit, pre-merge-commit, pre-push, manual]
      language: system
      pass_filenames: false
      always_run: true
ci:
  skip:
    - poe-format
    - poe-lint
    - poe-test
{%- endif %}
