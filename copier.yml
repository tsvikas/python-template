_min_copier_version: "9.5.0"

_subdirectory: project_name

_tasks:
  - "just init"

_jinja_extensions:
  - copier_templates_extensions.TemplateExtensionLoader
  - extensions/jinja2_gitconfig.py:GitConfigExtension

user_name:
  type: str
  help: Your full name. It is used in the copyright notice and PyPI metadata.
  default: "{{ 'user.name' | git_config }}"
  validator: >-
    {% if not user_name %}
    You must provide a name.
    {% endif %}

user_email:
  type: str
  help: Your email address. It is used in PyPI metadata.
  default: "{{ 'user.email' | git_config }}"
  validator: >-
    {% if not (user_email | regex_search('^[^@]+@[^@]+\.[^@]+$')) %}
    Not a valid email.
    {% endif %}

github_user:
  type: str
  help: Your GitHub username (or organization).
  default: >-
    {{ user_email.split('@')[0]}}
  validator: >-
    {% if not (github_user | regex_search('^[a-zA-Z0-9\-]+$')) %}
    Can only contain alphanumeric characters and dashes.
    {% endif %}

project_name:
  type: str
  help: The repo name. Probably equal to the destination dirname
  default: >-
    {{ _folder_name }}
  validator: >-
    {% if not (project_name | regex_search('^[a-z][a-z0-9\-]+$')) %}
    Must start with a letter, followed one or more letters, digits or dashes all lowercase.
    {% endif %}

package_name:
  type: str
  help: The package name. Must be a valid identifier.
  default: >-
    {{ project_name | lower | replace("-", "_") }}
  validator: >-
    {% if not (package_name | regex_search('^[a-z][a-z0-9_]+$')) %}
    Must start with a letter, followed one or more letters, digits or underscores all lowercase.
    {% endif %}

package_description:
  type: str
  help: A one-line summary of what the package does.
  placeholder: Why fit in when you were born to stand out?
  validator: >-
    {% if package_description | length > 80 %}
    Must be up to 80 characters long
    {% endif %}
    {% if package_description[-1] != '.' %}
    Must end with a period
    {% endif %}

license:
  type: str
  help: Choose a license, see https://choosealicense.com/ for help
  default: MIT
  choices:
    "Proprietary             - see https://choosealicense.com/no-permission/": Proprietary
    "AGPL-3.0-or-later       - Copyleft": AGPL-3.0-or-later
    "GPL-3.0-or-later        - Copyleft": GPL-3.0-or-later
    "LGPL-3.0-or-later       - Copyleft": LGPL-3.0-or-later
    "MPL-2.0                 - Copyleft": MPL-2.0
    "Apache-2.0              - Permissive": Apache-2.0
    "MIT                     - Permissive": MIT
    "BSL-1.0                 - Permissive": BSL-1.0
    "Unlicense               - Permissive": Unlicense

year:
  type: int
  help: The current year, for the copyright clause
  default: "{{ '%Y' | strftime }}"
  validator: >-
    {% if year <= 0 %}Must be positive{% endif %}
    {% if year <= 999 %}Must be 4 digits{% endif %}
    {% if year > 9999 %}Must be 4 digits{% endif %}

python_minor:
  type: int
  help: Minimal minor version of python, i.e '9' or '13' for 3.9 or 3.13
  default: 13
  validator: >-
    {% if python_minor < 0 %}Must be >= 0{% endif %}

get_package_version_from_vcs:
  type: bool
  help: Use the version control system for versioning?
  default: true

has_cli:
  type: bool
  help: Add a cli module and entrypoint?
  default: true

jupyter_files:
  type: str
  help: Allow jupyter notebooks in the repo?
  default: forbid
  choices:
    "Don't commit notebooks, silently ignore them": ignore
    "Don't commit notebooks, fail in pre-commit": forbid
    "Allow notebooks, strip outputs": strip_outputs
    "Allow notebooks": allow

contains_jupyter_files:
  type: bool
  default: "{{ jupyter_files in ['strip_outputs', 'allow'] }}"
  when: false

format_tool:
  type: str
  help: The python formatter to use
  default: black
  choices:
    - black
    - ruff-format
